{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'l-content',
    'event-page__wrapper',
    'l-article-wrapper'
  ]
%}

<!-- fields -->
{% set bg_img = content.field_image_ext_url[0]['#uri'] | image_style('event_page_pic_1360px_') %}
{% set start_time = content.field_start_time[0]['#attributes']['datetime'] %}
{% set end_time = content.field_end_time[0]['#attributes']['datetime'] %}
{% set short_description = content.field_short_description[0]['#context']['value'] %}
{% set description = content.field_description[0]['#text'] %}
{% set location_extra_info = content.field_location_extra_info[0]['#context']['value'] %}
{% set area = content.field_area[0]['#title'] %}
{% set free = content.field_free_enterance[0]['response'] %}
{% set price = content.field_price[0]['#context']['value'] %}
{% set provider_www = content.field_provider_www[0]['content'] %}
{% set provider_phone = content.field_provider_phone[0]['#context']['value'] %}
{% set provider_email = content.field_provider_email[0]['#context']['value'] %}
{% set ticket_vendor = content.field_ticket_vendor[0]['content'] %}

{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>

  <div class="event__date--container">
    {{ start_time|date("d.m.Y", "Europe/Helsinki") }}
    <span class="event__date--separator"></span>
    {{ end_time|date("d.m.Y", "Europe/Helsinki") }}
  </div>
  {{ title_prefix }}
    <h1 class="event__title">{{ label }}</h1>
  {{ title_suffix }}

  {% if content.field_image_ext_url[0]['#uri'] %}
    <div class="event__image--container" style="background-image: url('{{ bg_img }}' );">
    </div>
  {% endif %}

  <div class="event__content--container">
    <div {{ content_attributes.addClass('text-area node__content event__text-content') }}>
      {% if short_description %}
        <div class="event__content__short-description">
          {{ short_description }}
        </div>
      {% endif %}

      {% if description %}
        <div class="event__content__description">
          {{ description| striptags| raw }}
        </div>
      {% endif %}

      <a class="event__back-button" href="/"><i class="fas fa-chevron-left"></i>{{ "Back to events listing"|t }}</a>
    </div>

    <div class="event__content--sidebar">
      <h3 class="event__content--sidebar__title">
        {{ "Event information:"|t }}
      </h3>

      {# <div class="event__content--sidebar__item event__time">
        <i class="fas fa-clock"></i>
        {% trans with {'context': 'Event sidebar'} %}At{% endtrans %} {{ start_time|date('U', "Europe/Helsinki")|format_date('short') }} - {{ end_time|date('U', "Europe/Helsinki")|format_date('short') }}
      </div> #}

      {% if location_extra_info or area %}
      <div class="event__content--sidebar__item">
        <i class="fas fa-map-marker-alt"></i>
        {% if location_extra_info %}
          {{ location_extra_info }},
        {% endif %}
        {% if area %}
          {{ area }}
        {% endif %}
      </div>
      {% endif %}

     {% if 'Yes' in content.field_free_enterance[0] %}
<div class="event__content--sidebar__item">
<i class="fas fa-euro-sign"></i>
     Free Event
</div>
{% endif %}
{# {% if 'Yes' in content.field.paragraph.additional_information.field_chi[0] %}
<div class="event__content--sidebar__item">
<i class="fas fa-euro-sign"></i>
     Child friendly
</div>
{% endif %} #}

      {# {% if free.reponse %}yes{% else %}no{% endif%} #}

      {% if price %}
      <div class="event__content--sidebar__item">
        <i class="fas fa-euro-sign"></i>
        {{ price }}
      </div>
      {% endif %}

      {% if provider_www %}
      <div class="event__content--sidebar__item">
        <i class="fas fa-home"></i>
        <a href={{ provider_www['url'] }}>
          {{ provider_www['label'] }}
        </a>
      </div>
      {% endif %}

      {% if provider_phone %}
      <div class="event__content--sidebar__item">
        <i class="fas fa-phone"></i>
        {{ provider_phone }}
      </div>
      {% endif %}

      {% if provider_email %}
      <div class="event__content--sidebar__item">
        <i class="fas fa-at"></i>
        {{ provider_email }}
      </div>
      {% endif %}

      {% if ticket_vendor %}
        <div class="event__content--sidebar__item">
          <i class="fas fa-ticket-alt"></i>
          <a href={{ ticket_vendor['url'] }}>
              {{ ticket_vendor['label'] }}
          </a>
        </div>
      {% endif %}
    </div>
  </div>
</article>

